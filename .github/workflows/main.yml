# GithubAction 이름
name: sm-action

# main branch에 push가 발생하면 실행
on:
  push:
    branches:
      - main
  workflow_dispatch:


env:
  # S3 bucket 이름 입력
  S3_BUCKET_NAME: backnstock-deploy
  # 프로젝트 이름 입력
  PROJECT_NAME: miniBacktesting_be

jobs:
  build:
    # 빌드 환경 OS 설정
    runs-on: ubuntu-latest

    # 단계별로 작업 실행을 구분
    steps:
      # main 브랜치에서 checkout
      - name: Checkout
        uses: actions/checkout@v2

      # 프로젝트를 zip 파일로 압축
      - name: Make zip file
        # $GITHUB_SHA는 Action 발생때마다 발생하는 변수
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      # AWS 인증정보 확인
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          # GithubAction Secrets에서 각각의 변수를 가지고옵니다.
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 압축파일을 인증한 AWS 계정의 S3 서버에 업로드
      - name: Upload to S3
        run: aws s3 cp --region ${{ secrets.AWS_REGION }} ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      # CodeDeploy 어플리케이션 구동
      - name: Code Deploy
        # 압축해서 올라간 파일을 EC2서버에 압축풀고, 쉘 스크립트를 실행
        run: aws deploy create-deployment --application-name logging-system-deploy --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name develop --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
