name: sm-action

# githubActionTest branch에 push가 발생하면 실행
on:
  push:
    branches:
      - githubActionTest
  workflow_dispatch:

# S3 bucket 이름 입력
env:
  S3_BUCKET_NAME: jsm-bucket
  PROJECT_NAME: miniBacktesting_be

jobs:
  build:
    runs-on: ubuntu-18.04
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

#      - name: Set up JDK 1.8
#        uses: actions/setup-java@v1
#        with:
#          java-version: 1.8
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#        shell: bash
#
#      - name: Build with Gradle
#        run: ./gradlew build
#        shell: bash

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build and release to DockerHub
        env:
          NAME: pyuseon # 계정 명
          REPO: back_n_stock # 레포 이름
        run: |
          docker build -t $REPO .
          docker tag $REPO:latest $NAME/$REPO:latest
          docker push $NAME/$REPO:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp --region ${{ secrets.AWS_REGION }} ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
#        run: aws deploy create-deployment --application-name Github-Actions-Deploy --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name Github-Actions-Group --github-location repository=${{ github.repository }},commitId=${{ github.sha }}
        run: aws deploy create-deployment --application-name Github-Actions-Deploy --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name Github-Actions-Group --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
